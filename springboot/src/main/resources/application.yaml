logging:
  level:
    root: ${LOG_LEVEL:INFO}

management:
  endpoints:
    web:
      exposure:
        include: health,info,readiness
  server:
    port: ${MANAGEMENT_SERVER_PORT:9090}

  endpoint:
    health:
      show-details: ALWAYS

server:
  port: ${SERVER_PORT:8081}
#  servlet:
#    context-path: "/v1/api"

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.parameters.serverAddress}/realms/spring

keycloak:
  parameters:
    client-id: ${SPRING_CLIENT_ID:spring-boot-app}
    client-password: ${SPRING_CLIENT_PASSWORD:ZjvIwT5SuQ3wrqwW1kst4vxhCtvgcKo7}
    serverAddress: ${KEYCLOAK_SERVER_ADDRESS:http://localhost:8080}
    adminUser: ${KC_ADMIN_USER:admin}
    adminPassword: ${KC_ADMIN_PASS:admin}
    adminUserSpring: ${KC_ADMIN_USER_SPRING:administrator}
    adminPasswordSpring: ${KC_ADMIN_PASS_SPRING:admin}
    resources:
      - name: items
        scopes:
        - read
        - update
        - delete
        - write
    custom-client-scopes:
      - can_write_entity
    roles:
      - admin
      - regular-user

#      client:
#        registration:
#          keycloak:
#            client-id: spring-boot-app
#            authorization-grant-type: authorization_code
jwt:
  auth:
    converter:
      resource-id: ${keycloak.parameters.client-id}
      principal-attribute: preferred_username

